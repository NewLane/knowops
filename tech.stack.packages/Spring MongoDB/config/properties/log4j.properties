#-------------------------------------------------------------------------------
# realMethods Confidential
# 
# 2018 realMethods, Inc.
# All Rights Reserved.
# 
# This file is subject to the terms and conditions defined in
# file 'license.txt', which is part of this source code package.
#  
# Contributors :
#       realMethods Inc - General Release
#-------------------------------------------------------------------------------
###############################################################################
# Copyright (c) 2017 
#
# This file is part of realMethods.
#
#     realMethods is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     realMethods is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with realMethods.  If not, see <http://www.gnu.org/licenses/>.
#     
# Contributors:
#     realMethods Inc - initial API and implementation
###############################################################################
<!-- Logging Handler Definitions

    related parameters:
        synchronous (true or false)
        The following can contain any number of comma delimeted entries:

        debug - (Log4J logger name, MQ Conn. Pool Name, JMS Conn. Pool Name, SYSTEM_OUT)
        info - (Log4J logger name, MQ Conn. Pool Name, JMS Conn. Pool Name, SYSTEM_OUT)
        warning - (Log4J logger name, MQ Conn. Pool Name, JMS Conn. Pool Name, SYSTEM_OUT)
        error - (Log4J logger name, MQ Conn. Pool Name, JMS Conn. Pool Name, SYSTEM_OUT)
        datetimestampFormat - follows java.text.SimpleDateFormat
-->

<logHandlers>

    <!--This is the default log handler used by the application.  
        The framework internally uses a dedicated Log4J logger defined in lo4j.xml-->
        <logHandler name="FrameworkDefaultLog"
            synchronous="true"
            debug="SYSTEM_OUT, ${aib.getApplicationName()}"
            info="SYSTEM_OUT, ${aib.getApplicationName()}"
	        warn="SYSTEM_OUT, ${aib.getApplicationName()}"
	        error="SYSTEM_OUT, ${aib.getApplicationName()}"
	        dateTimeStampFormat="yyyy.mm.dd-hh:mm:ss"
        />
        <!-- add your own custom log handler(s) here -->

</logHandlers>
