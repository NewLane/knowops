#header()
package ${aib.getRootPackageName()}.tree;

#set( $imports = [ "#getBOPackageName()"] )
#importStatements( $imports )

import ${aib.getRootPackageName()}.#getBOPackageName().Base;

/**
 */
public class TreeModel
    implements Comparable<TreeModel>
{
    public TreeModel()
    {
    }

    public TreeModel( Base bo, String actionName, String parentID)
    {
        id              = bo.getIdentity();
        name            = bo.getAttributesByNameUserIdentifiesByAsString();
        namespace       = bo.getObjectType();
        this.actionName = actionName;
        this.parentID   = parentID;
        extraArgs       = null;
    }

    public TreeModel(String id, String name, String namespace, String actionName, String parentID, String extraArgs, java.util.ArrayList<TreeModel> children)
    {
        this.id         = id;
        this.name       = name;
        this.namespace  = namespace;
        this.actionName = actionName;
        this.parentID   = parentID;
        this.extraArgs  = extraArgs;

		if ( children != null )
	        this.children   = children;		
    }

    public TreeModel(String id, String name, String namespace, String actionName, String parentID, String extraArgs)
    {
        this(id, name, namespace, actionName, parentID, extraArgs, null);
    }

    public TreeModel(String id, String name, String namespace, String actionName, String extraArgs)
    {
        this(id, name, namespace, actionName, extraArgs, null, null);
    }

    public TreeModel(String id, String name, String namespace, String actionName)
    {
        this(id, name, namespace, actionName, null, null, null);
    }

    public String getID()
    {
        return id;
    }

    public void setID(String id)
    {
        this.id = id;
    }

    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    public java.util.ArrayList<TreeModel> getChildren()
    {
        return children;
    }

    public void setChildren(java.util.ArrayList<TreeModel> children)
    {
        setChildren(children, true);
    }

    public void setChildren(java.util.ArrayList<TreeModel> children, boolean sortFlag)
    {
        this.children = children;

        if (sortFlag)
        {
            sortChildren();
        }
    }

    public String getParentID()
    {
        return parentID;
    }

    public void setParentID(String parentID)
    {
        this.parentID = parentID;
    }

    public String getNamespace()
    {
        return namespace;
    }

    public void setNamespace(String namespace)
    {
        this.namespace = namespace;
    }

    public String getActionName()
    {
        return actionName;
    }

    public void setActionName(String actionName)
    {
        this.actionName = actionName;
    }

    public String getExtraArgs()
    {
        return extraArgs;
    }

    public void setExtraArgs(String extraArgs)
    {
        this.extraArgs = extraArgs;
    }

    public String getFormattedArguments()
    {
        if (extraArgs == null)
        {
            extraArgs = "";
        }

        if (!isList)
        {
            return (id + "&" + extraArgs);
        }
        else
        {
            if (parentID != null)
            {
                return (parentID + "&" + extraArgs);
            }
            else
            {
                return (extraArgs);
            }
        }
    }

    public boolean isList()
    {
        return isList;
    }

    public void isList(boolean isList)
    {
        this.isList = isList;
    }

    public String toString()
    {
        StringBuffer returnString = new StringBuffer();

        returnString.append("--id: ");
        returnString.append(id);
        returnString.append(", name: ");
        returnString.append(name);
        returnString.append(", namespace: ");
        returnString.append(namespace);
        returnString.append(", actionName: ");
        returnString.append(actionName);
        returnString.append(", parentID: ");
        returnString.append(parentID);
        returnString.append(", extraArgs: ");
        returnString.append(extraArgs);
        returnString.append(", children: ");

        if (children != null)
        {
            java.util.Iterator<TreeModel> iter = children.iterator();

            while (iter.hasNext())
            {
                returnString.append("\n  " + iter.next().toString());
            }
        }

        return (returnString.toString());
    }

    public void sortChildren()
    {
        java.util.Collections.sort(children, new NameComparator());
    }

    class NameComparator
        implements java.util.Comparator<TreeModel>
    {
        public int compare(TreeModel node1, TreeModel node2)
        {
            int nameComp = node1.getName().compareTo(node2.getName());

            return ((nameComp == 0) ? node1.getName().compareTo(node2.getName()) : nameComp);
        }
    }

    public int compareTo(TreeModel model)
    {
        int comp = name.compareTo(model.getName());

        return ((comp == 0) ? name.compareTo(model.getName()) : comp);
    }

    public boolean equals(Object obj)
    {
        if (!(obj instanceof TreeModel))
        {
            return false;
        }

        TreeModel model = (TreeModel) obj;

        return name.equals(model.getName()) && name.equals(model.getName());
    }

// attributes
    private String id; // Node's ID.
    private String name; // Node's name property.    
    private String parentID; // id of this node's parent
    private String namespace; // name of the Action package that links back to the node
    private String actionName = "showTab"; // associated action to fire when the object is selected
    private String extraArgs; // extra args to be applied to the action
    private boolean isList = false; // this tree node is actually a list, not an entity
    private java.util.ArrayList<TreeModel> children = new java.util.ArrayList<TreeModel>(); // Node's children.
}
